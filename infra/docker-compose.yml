version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: almenn
      POSTGRES_USER: almenn_user
      POSTGRES_PASSWORD: almenn_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U almenn_user -d almenn"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ..
      dockerfile: infra/Dockerfile.backend
    environment:
      - DATABASE_URL=postgresql://almenn_user:almenn_password@postgres:5432/almenn
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-32-character-encryption-key}
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Model Inference Service
  model-inference:
    build:
      context: ..
      dockerfile: infra/Dockerfile.model-inference
    environment:
      - REDIS_URL=redis://redis:6379
    ports:
      - "8001:8001"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ../backend:/app

  # Frontend
  frontend:
    build:
      context: ..
      dockerfile: infra/Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000

  # Celery Worker
  celery-worker:
    build:
      context: ..
      dockerfile: infra/Dockerfile.backend
    command: celery -A celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://almenn_user:almenn_password@postgres:5432/almenn
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-32-character-encryption-key}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../backend:/app

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ..
      dockerfile: infra/Dockerfile.backend
    command: celery -A celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://almenn_user:almenn_password@postgres:5432/almenn
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-32-character-encryption-key}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../backend:/app

volumes:
  postgres_data:
  redis_data:
